"""
Django settings for erna project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent
PROJECT_DIR = os.path.dirname(BASE_DIR)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-cg)5hm5jkgrog$v=6(*gshbiya@zn5)0^i4_kqphd5o(155e($'

# Application definition
INSTALLED_APPS = [
    # default apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles', 

    # additional apps
    'rest_framework',
    'corsheaders',
    'braces',
    'django_celery_results',
    'django_celery_beat',

    # customary apps
    'rna_seq',
    'api',
    'commons',
]

MIDDLEWARE = [
    # CORS
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware', 

    # django
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'erna.urls'

WSGI_APPLICATION = 'erna.wsgi.application'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
STATIC_URL = 'static/'


# customary user models
AUTH_USER_MODEL = "commons.CustomUser"

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True



# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# other related path
PIPELINES_DIR = os.path.join(PROJECT_DIR, 'pipelines')

# third-party bioinformatics tools
EXTERNALS_DIR = os.path.join(PROJECT_DIR, 'externals')

# third-party bioinformatics tools
LOGS_DIR = os.path.join(PROJECT_DIR, 'logs')

# raw data namely fastq
RAW_DATA_DIRS = [os.path.join(PROJECT_DIR, 'raw_data'),]

# analytic results
RESULTS_DIR = os.path.join(PROJECT_DIR, 'results')

# reference namely genome DNA in fa format
REFERENCES_DIR = os.path.join(PROJECT_DIR, 'references')
INDEX_DIR = os.path.join(REFERENCES_DIR, 'index')
if not os.path.isdir(INDEX_DIR):
    os.mkdir(INDEX_DIR)



# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters': {
#         'verbose': {
#             'format': '{levelname} {asctime} {module} {message}',
#             'style': '{',
#         },
#     },
#     'handlers': {
#         'console': {
#             'level': 'DEBUG',
#             'class': 'logging.StreamHandler',
#             'formatter': 'verbose',
#         },
#         'file': {
#             'level': 'DEBUG',
#             'class': 'logging.FileHandler',
#             'filename': '/home/yuan/bio/emirna_backend/logs/django.log',
#             'formatter': 'verbose',
#         },
#     },
#     'loggers': {
#         # ...
#         'myapp': {
#             'handlers': ['console', 'file'],
#             'level': 'DEBUG',
#         },
#     },
# }